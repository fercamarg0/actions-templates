name: Docker Build & Push (Reusable)

on:
  workflow_call:
    inputs:
      registry:
        description: "Container registry (ghcr.io, docker.io)"
        required: true
        type: string
      image-name:
        description: "Image name (e.g., username/image-name)"
        required: true
        type: string
      context:
        description: "Build context path"
        required: false
        default: "."
        type: string
      dockerfile:
        description: "Path to Dockerfile"
        required: false
        default: "Dockerfile"
        type: string
      platforms:
        description: "Target platforms (e.g., linux/amd64,linux/arm64)"
        required: false
        default: "linux/amd64"
        type: string
      push:
        description: "Push to registry after build"
        required: false
        default: true
        type: boolean
      sbom:
        description: "Generate SBOM (Software Bill of Materials)"
        required: false
        default: true
        type: boolean
      provenance:
        description: "Generate provenance attestation"
        required: false
        default: true
        type: boolean
    secrets:
      registry-username:
        description: "Registry username"
        required: true
      registry-token:
        description: "Registry token/password"
        required: true

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-token }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ inputs.image-name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: ${{ inputs.sbom }}
          provenance: ${{ inputs.provenance }}

      - name: Generate artifact attestation
        if: inputs.push && inputs.provenance
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ inputs.registry }}/${{ inputs.image-name }}
          subject-digest: ${{ steps.build-push.outputs.digest }}
          push-to-registry: true
